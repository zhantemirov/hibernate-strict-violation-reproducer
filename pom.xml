<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.hibernate-strict-violation</groupId>
    <artifactId>reproducer</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <version.arquillian-bom>1.7.0.Alpha11</version.arquillian-bom>
        <version.arquillian.protocol>1.7.0.Alpha11</version.arquillian.protocol>
        <version.arquillian-container>5.0.0.Alpha3</version.arquillian-container>
        <version.creaper>1.6.2</version.creaper>
        <version.jakartaee-api>9.1.0</version.jakartaee-api>
        <version.junit>4.13.2</version.junit>
        <version.log4j>1.2.17</version.log4j>
        <version.wf.core>19.0.0.Beta15</version.wf.core>
        <version.wildfly.parent.bom>27.0.0.Alpha4</version.wildfly.parent.bom>
        <version.wildfly.ejb-client.bom>27.0.0.Alpha4</version.wildfly.ejb-client.bom>
        <version.jboss.ejb-client-jakarta>4.0.44.Final</version.jboss.ejb-client-jakarta>

        <version.plugin.antrun>1.8</version.plugin.antrun>
        <version.plugin.antrun.ant>1.8.1</version.plugin.antrun.ant>
        <version.plugin.antrun.contrib>1.0b3</version.plugin.antrun.contrib>
        <version.plugin.compiler>3.8.1</version.plugin.compiler>
        <version.plugin.enforcer>3.0.0-M2</version.plugin.enforcer>
        <version.plugin.groovy>2.1.1</version.plugin.groovy>
        <version.plugin.groovy.groovy>3.0.10</version.plugin.groovy.groovy>
        <version.plugin.surefire>3.0.0-M3</version.plugin.surefire>

        <!-- Path to server zip archive, has to be specified at command line -->
        <server.zip/>
        <!-- VM arguments for server instances -->
        <server.vm.arguments>-Xmx512M -Djava.net.preferIPv4Stack=true</server.vm.arguments>
        <server.jvm.jpms.args>--add-exports=java.desktop/sun.awt=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.management/javax.management=ALL-UNNAMED --add-opens=java.naming/javax.naming=ALL-UNNAMED</server.jvm.jpms.args>
        <client.jvm.jpms.args>--add-exports=java.desktop/sun.awt=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.management/javax.management=ALL-UNNAMED --add-opens=java.naming/javax.naming=ALL-UNNAMED</client.jvm.jpms.args>

        <!-- target directories for each server node -->
        <directory.nodes>${project.build.directory}/nodes</directory.nodes>
        <directory.node1>${directory.nodes}/node1</directory.node1>

        <ipv6>false</ipv6>
        <node1.address>127.0.0.1</node1.address>
        <node1.application-port>8080</node1.application-port>
        <node1.management-port>9990</node1.management-port>
        <server.startup.timeout>120</server.startup.timeout>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.arquillian-bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-parent</artifactId>
                <version>${version.wildfly.parent.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-ejb-client-bom</artifactId>
                <version>${version.wildfly.ejb-client.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Related to tested server -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${version.jakartaee-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client-jakarta</artifactId>
            <version>${version.jboss.ejb-client-jakarta}</version>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian related -->
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
            <version>${version.arquillian.protocol}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>${version.arquillian-container}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.wildfly.core</groupId>
                    <artifactId>wildfly-launcher</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-common</artifactId>
            <version>${version.arquillian-container}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-launcher</artifactId>
            <version>${version.wf.core}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-controller</artifactId>
            <version>${version.wf.core}</version>
            <scope>test</scope>
        </dependency>

        <!-- Creaper -->
        <dependency>
            <groupId>org.wildfly.extras.creaper</groupId>
            <artifactId>creaper-core</artifactId>
            <version>${version.creaper}</version>
        </dependency>
        <dependency>
            <groupId>org.wildfly.extras.creaper</groupId>
            <artifactId>creaper-commands</artifactId>
            <version>${version.creaper}</version>
        </dependency>
        <dependency><!-- We need to override creaper's wildfly-cli to be able to work with latest container -->
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-cli</artifactId>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/java</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.plugin.compiler}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${version.plugin.enforcer}</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-properties</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>server.zip</property>
                                    <regex>.+</regex>
                                    <message>-Dserver.zip must be specified (path to ZIP file with server distribution)</message>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.plugin.surefire}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <systemPropertyVariables>
                        <node1.jbossHome>${directory.node1}</node1.jbossHome>
                        <node1.address>${node1.address}</node1.address>
                        <node1.application-port>${node1.application-port}</node1.application-port>
                        <node1.management-port>${node1.management-port}</node1.management-port>
                        <arquillian.launch>manual-mode</arquillian.launch>
                        <server.vm.arguments>${server.vm.arguments} ${server.jvm.jpms.args}</server.vm.arguments>
                    </systemPropertyVariables>
                    <argLine>${client.jvm.jpms.args} -Dlauncher.skip.jpms.properties=true</argLine>
                </configuration>
            </plugin>

            <!-- prepare server distributions before running the test -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>${version.plugin.groovy}</version>
                <executions>
                    <execution>
                        <id>unzip-server</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                if (!Boolean.getBoolean("skipUnzipServer")) {
                                    def ant = new AntBuilder()
                                    for(node in ["${directory.node1}"
                                    ]) {
                                        if(!new File("$node").exists()) {
                                            ant.unzip(src: "${server.zip}",
                                                    dest: "$node",
                                                    overwrite: "true"){ cutdirsmapper(dirs:"1") }
                                        } else {
                                            println "Not unzipping server zip into $node, because the directory already exists"
                                        }
                                    }
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>${version.plugin.groovy.groovy}</version>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>jboss-public</id>
            <name>JBoss Public</name>
            <url>
                https://repository.jboss.org/nexus/content/repositories/public/
            </url>
        </repository>
        <repository>
            <id>jboss-ga</id>
            <name>JBoss GA</name>
            <url>
                https://maven.repository.redhat.com/ga
            </url>
        </repository>
    </repositories>

</project>